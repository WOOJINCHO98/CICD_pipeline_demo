name: prod test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    env:
      working-directory: ./cicd_pipeline_test
      CI: false
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3

      # docker hub에 로그인하고 이미지를 빌드합니다. 이후에 push를 진행합니다.
      # docker_username을 적지 않으면 push 시에 요청이 거부될 수 있습니다.
      - name: Docker Hub build & push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} -f Dockerfile.prod
          docker images
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}

      # .env에 있던 환경변수들을 등록해주는 단계
      # - name: .env setting
      #   run: |
      #     # echo "REACT_APP_SERVER_URL=${{ secrets.REACT_APP_SERVER_URL }}" >> ./s-cicd_pipeline_test/.env

      # - name: Cache node modules
      #   uses: actions/cache@v3
      #   id: cache
      #   with:
      #     path: ./cicd_pipeline_test/node_modules
      #     key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      # - name: Install Dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: yarn
      #   working-directory: ${{ env.working-directory }}
      # - run: npm run build --if-present
      #   working-directory: ${{ env.working-directory }}
      # # - run: npm test
      # #   working-directory: ${{ env.working-directory }}
      # - run: echo Your Build is Done!
      # - run: ls -al

      # - name: SCP ACTION
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.HOST_DNS }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     source: ./cicd_pipeline_test/build
      #     target: ~/cicd_pipeline_test-build/cicd_pipeline_test-test/

      - name: SSH ACTION
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/CICDTEST/
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker rm -f $(sudo docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            sudo docker run -d -p 3002:80 --name test-app-prod ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            sudo docker run 
            # sudo docker-compose up -d
            sudo docker image prune -f
